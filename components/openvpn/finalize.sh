#!/bin/bash
set -e

# Load the build configuration variables.
source /OUTSIDE/script/config.sh

# Copy the autogenerated keys to the output directory.
mkdir -p "${OUTPUT_DIR}/keys/tor"
mkdir -p "${OUTPUT_DIR}/keys/openvpn"
cp -r -- ./files/etc/tor/lib/hidden_service/openvpn/ "${OUTPUT_DIR}/keys/tor/"
cp -- ./files/etc/openvpn/ssl/* "${OUTPUT_DIR}/keys/openvpn/"

# Copy the root certificates to the output directory.
PROFILE_DIR="${PROFILE_DIR}" /OUTSIDE/script/guest/copy_ssl_root_cert.sh "${OUTPUT_DIR}/keys/ca/"

# Get the CA key we just copied so OpenVPN can validate the certificate.
OPENVPN_CA=$(cat "${OUTPUT_DIR}/keys/ca/ca.key")

# Get the OpenVPN keys.
OPENVPN_KEY=$(cat ./files/etc/openvpn/ssl/openvpn.key)
OPENVPN_CRT=$(cat ./files/etc/openvpn/ssl/openvpn.crt)

# Get the Tor hidden service hostname.
ONION_HOSTNAME=$(cat ./files/etc/tor/lib/hidden_service/openvpn/hostname)

# Generate the OpenVPN client configuration.
# XXX TODO customize the config a little, we're using the defaults here...
cat >"${OUTPUT_DIR}/keys/openvpn/${ONION_HOSTNAME}.ovpn" <<EOF
client
dev tun
proto tcp
socks-proxy-retry
socks-proxy 127.0.0.1 1050
fast-io
remote ${ONION_HOSTNAME} 1194
remote-cert-tls server
nobind
persist-key
persist-tun
comp-lzo no
verb 3
<ca>
${OPENVPN_CA}
</ca>
<cert>
${OPENVPN_CRT}
</cert>
<key>
${OPENVPN_KEY}
</key>
EOF
